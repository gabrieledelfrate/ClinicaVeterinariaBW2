@model ClinicaVeterinaria.Models.Examination
@{
    ViewBag.Title = "AddExamination";
}

<div class="container mt-5">
    <h2 class="border-bottom border-success pb-3 text-success">Aggiungi Esame</h2>



    @if (TempData["MessageReg"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["MessageReg"]
        </div>
    }


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <h4 class=" text-success">Dettagli Esame</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                <div class="me-4 col-3">
                    <div class="mt-2">
                        <label class="form-label">Data Visita</label>
                        @Html.EditorFor(model => model.DataVisita, new { htmlAttributes = new { @class = "form-control border-success border-success", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.DataVisita, "", new { @class = "text-danger" })
                    </div>

                    <div class="mt-3">
                        <label class="form-label">Patologie Riscontrate</label>
                        @Html.EditorFor(model => model.PatologieRiscontrate, new { htmlAttributes = new { @class = "form-control border-success" } })
                        @Html.ValidationMessageFor(model => model.PatologieRiscontrate, "", new { @class = "text-danger" })
                    </div>

                    <div class="mt-3">
                        <label class="form-label">Ricetta</label>
                        @Html.EditorFor(model => model.Ricetta, new { htmlAttributes = new { @class = "form-control border-success" } })
                        @Html.ValidationMessageFor(model => model.Ricetta, "", new { @class = "text-danger" })
                    </div>

                    <div class="mt-3">
                        <label class="form-label">Numero Ricetta</label>
                        @Html.EditorFor(model => model.NumeroRicetta, new { htmlAttributes = new { @class = "form-control border-success", @type = "number", @pattern = "[0-9]*", @min = "0" } })
                        @Html.ValidationMessageFor(model => model.NumeroRicetta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="me-4 col-3">
                    <div class="mt-2">
                        <label class="form-label">Prezzo</label>
                        @Html.TextBoxFor(model => model.Prezzo, new { @class = "form-control border-success", type = "number", step = "1.00", @min = "0" })
                        @Html.ValidationMessageFor(model => model.Prezzo, "", new { @class = "text-danger" })
                    </div>

                    @Html.Hidden("DoctorID", (int)Session["DoctorID"]) 
                    <div class="mt-3">
                        @Html.Label("NomeDottore", "Dottore", new { @class = "form-label" })
                        @Html.TextBox("NomeDottore", Session["UserM"] as string, new { @class = "form-control", @readonly = "readonly" })
                    </div>

                    @Html.Hidden("BeastID", (int)ViewBag.Bestia.BeastID)
                <div class="mt-3">
                    @Html.Label("BeastID", "Animale", new { @class = "form-label" })
                    @Html.TextBox("Nome Bestia", ViewBag.Bestia.Nome as string, new { @class = "form-control", @readonly = "readonly" })

                </div>

                </div>
            </div>
            <div class="d-flex mt-4">
                <div class="me-3">
                    <input type="submit" value="Aggiungi Esame" class="btn btn-success p-2" />
                </div>
                <div class="ms-3">
                    @Html.ActionLink("Torna Alle Bestie", "Index", null, new { @class = "btn btn-secondary p-2" })
                </div>
            </div>
        </div>
    }
</div>
